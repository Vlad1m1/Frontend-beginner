const name = "Александр";
const age = 28;

// Если у объекта совпадает название свойства с названием переменной.
const user = {
  name, //name: name,
  age, //age: age,
  isDeveloper: true,
};

console.log(user);

/*
 * Имена свойств: только строки.
 * Не рекомендуется использовать слова, которые зарезервированы самим JS, хоть ими и можно именовать свойства.
 * Хоть мы и можем назвать свойство с тире или с пробелом между словами через кавычки, рекомендуется использовать camelCase
 * Для именования свойств, в которых несколько слов.
 */

// Если мы хотим в качестве
// const propName = prompt("Свойство с каким именем вы хотите добавить в объект?");
// const propValue = prompt("Какое значение вы хотите вписать в совйство?");
//
// const obj = {
//   [propName] : propValue, // Если мы хотим задать свойство с помощью переменной, и чтобы имя свойства было значением этой пременной.
//   // Иначе, если мы уберём квадратные скобки, то свойство будет называться propName, а значение будет корректным (которе мы и хотели ввести).
// }
//
// console.log(obj);

// Проверка существования свойства в объекте.
console.log("name" in user);
console.log("isDeveloper" in user);

// Цикл for...in
for (const key in user) {
  console.log(key);
  console.log(user[key]);
}

/*
* Порядок свойств объекта:
* Сначала JS пытается сортировать имя свойства, которое можно интерпретировать как число, и потом он выводит по порядку,
* по которому мы написали свойства
* */
const nums = {
  1: "Первый",
  2: "Второй",
  3: "Третий",
  name: "Vladimir",
  age: 28,
};

for (const numsKey in nums) {
  console.log(`${numsKey} : ${nums[numsKey]}.`);
}

console.log(nums);